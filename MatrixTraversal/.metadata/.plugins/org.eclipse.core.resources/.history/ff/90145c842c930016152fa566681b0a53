/**
 * author : Saikrishna Gollapudi
 */
package org.gollax.matrixtraversal;
public class MatrixTraversal {


	
	public boolean traverse(Matrix m,int startRow, int endRow, int startColumn, int endColumn, boolean isDone) throws MatrixOperationException{
		if(isDone)return true;
		
		for(int index=startColumn;index<endColumn;index++){
			doSomething(m.getValue(startRow, index));
		}
		for(int index=startRow+1; index<endRow;index++){
			doSomething(m.getValue(index,endColumn));
		}
		for(int index=endColumn-1;index<startRow; --index){
			doSomething(m.getValue(endRow,index));
		}
		for(int index=endRow+1; index<startRow;--index){
			doSomething(m.getValue(index,startColumn));
		}
		if(startRow-endRow>1 && startColumn-endColumn>1){
			traverse(m,0,0,0,0,isDone);
		}
		isDone = true;
		return isDone;
	}

	private void doSomething(int value) {
		// TODO Auto-generated method stub
		System.out.println(value);
	}

}
